/**
 * Setup Environment Variables
 */

require('dotenv').config()

/**
 * Node Module Dependencies
 */

var app = require('../app')
var debug = require('debug')('console.log(me)::server')
var http = require('http')

/**
 * Get Port from .ENV & Store into Express
 * Also: declare whether this is production or development
 */

var port = normalizePort(process.env.PORT || '3000')
app.set('port', port)
app.set('env', process.env.VERSION)

/**
 * Create HTTP Server
 */

var server = http.createServer(app)

/**
 * Listen on port, including error handlers
 */

server.listen(port)
server.on('error', onError)
server.on('listening', onListening)

/**
 * Normalize PORT into a # or string
 */

function normalizePort (value) {
  var port = parseInt(value, 10)

  if (isNaN(port)) {
    return value
  } else if (port >= 0) {
    return port
  } else {
    return false
  }
}

/**
 * Event listener for HTTP server "error" event
 */

function onError (error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening () {
  var addr = server.address()
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port
  debug('Listening on ' + bind)
}
